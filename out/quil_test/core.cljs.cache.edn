{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name quil-test.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "C:\\Users\\sam1373\\Documents\\clojure\\quil-test\\src\\quil_test\\core.cljs", :line 5, :column 7, :end-line 5, :end-column 12, :arglists (quote ([]))}, :name quil-test.core/setup, :variadic false, :file "src\\quil_test\\core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "C:\\Users\\sam1373\\Documents\\clojure\\quil-test\\src\\quil_test\\core.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([state]))}, :name quil-test.core/update-state, :variadic false, :file "src\\quil_test\\core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "C:\\Users\\sam1373\\Documents\\clojure\\quil-test\\src\\quil_test\\core.cljs", :line 39, :column 7, :end-line 39, :end-column 17, :arglists (quote ([state]))}, :name quil-test.core/draw-state, :variadic false, :file "src\\quil_test\\core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, quil-test {:protocol-inline nil, :meta {:file "C:\\Users\\sam1373\\Documents\\clojure\\quil-test\\src\\quil_test\\core.cljs", :line 52, :column 14, :end-line 52, :end-column 23, :export true, :arglists (quote ([]))}, :name quil-test.core/quil-test, :variadic false, :file "src\\quil_test\\core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :hsb :fn :color :parts :update :size :setup :middleware :host :host-id :no-start :x :draw}, :order [:hsb :color :x :y :parts :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}